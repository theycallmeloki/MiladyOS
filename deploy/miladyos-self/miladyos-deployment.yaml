apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: miladyos-home-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: longhorn-single-replica
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: miladyos-kube-config-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
  storageClassName: longhorn-single-replica
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: miladyos-pachyderm-config-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
  storageClassName: longhorn-single-replica
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-storage-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: longhorn-single-replica
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: miladyos
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: miladyos
  template:
    metadata:
      labels:
        app: miladyos
    spec:
      nodeSelector:
        longhorn.io/node: "true"
      initContainers:
      - name: volume-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /var/jenkins_home && mkdir -p /var/log && chmod 777 /var/log && mkdir -p /root/.kube /root/.pachyderm && touch /root/.kube/config /root/.pachyderm/config.json && chmod -R 700 /root/.kube /root/.pachyderm"]
        volumeMounts:
        - name: miladyos-home
          mountPath: /var/jenkins_home
        - name: varlog
          mountPath: /var/log
        - name: kube-config
          mountPath: /root/.kube
        - name: pachyderm-config
          mountPath: /root/.pachyderm
      containers:
      - name: dind
        image: docker:dind
        securityContext:
          privileged: true
        env:
          - name: DOCKER_TLS_CERTDIR
            value: ""
        volumeMounts:
          - name: docker-storage
            mountPath: /var/lib/docker
          - name: docker-run
            mountPath: /var/run
        readinessProbe:
          exec:
            command: ["docker", "info"]
          initialDelaySeconds: 10
          periodSeconds: 5
      - name: miladyos
        image: ogmiladyloki/miladyos:latest
        securityContext:
          privileged: true
          runAsUser: 0  # Run as root
        ports:
        - containerPort: 8080
          name: web
        - containerPort: 50000
          name: agent
        - containerPort: 6000
          name: mcp
        env:
        - name: JENKINS_ADMIN_ID
          value: "admin"
        - name: JENKINS_ADMIN_PASSWORD
          value: "password"
        - name: KUBERNETES_MODE
          value: "true"
        - name: DISABLE_DOCKER
          value: "false"
        - name: JENKINS_URL
          value: "http://miladyos:8080"
        - name: REDIS_HOST
          value: "localhost"
        - name: REDIS_PORT
          value: "6379"
        volumeMounts:
        - name: miladyos-home
          mountPath: /var/jenkins_home
        - name: varlog
          mountPath: /var/log
        - name: docker-run
          mountPath: /var/run
        - name: kube-config
          mountPath: /root/.kube
        - name: pachyderm-config
          mountPath: /root/.pachyderm
      - name: redis
        image: redis:6.2-alpine
        ports:
        - containerPort: 6379
        command: ["redis-server", "--appendonly", "yes"]
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: miladyos-home
        persistentVolumeClaim:
          claimName: miladyos-home-pvc
      - name: docker-storage
        persistentVolumeClaim:
          claimName: docker-storage-pvc
      - name: docker-run
        emptyDir: {}
      - name: varlog
        emptyDir: {}
      - name: redis-data
        emptyDir: {}
      - name: kube-config
        persistentVolumeClaim:
          claimName: miladyos-kube-config-pvc
      - name: pachyderm-config
        persistentVolumeClaim:
          claimName: miladyos-pachyderm-config-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: miladyos
  namespace: default
spec:
  selector:
    app: miladyos
  ports:
  - name: web
    port: 8080
    targetPort: 8080
  - name: agent
    port: 50000
    targetPort: 50000
  - name: mcp
    port: 6000
    targetPort: 6000
  - name: redka
    port: 6379
    targetPort: 6379
  type: ClusterIP 